library(tidyr)
library(dplyr)
library(foreign)
library(stargazer)
library(Metrics)
library(MASS)
library(MLmetrics)
library(ggplot2)
library (plyr)
# modelo poisson R
dd_deptos <- read.csv('tablas/dd_deptos.csv', sep=";", dec=",")
# convierte largo del límite de metros a kilómetros
dd_deptos$largo_limite_km <- dd_deptos$largo_limite/1000
# reemplaza nulos del largo del límite por 0.0001
dd_deptos <- dd_deptos %>% replace_na(list(largo_limite_km = 0.0001))
# convierte variable de límites s tipo logical
dd_deptos$dummy_limit <- as.logical(dd_deptos$dummy_limit)
# nombre de deptos a factor
dd_deptos$nom_depto_orig <- as.factor(dd_deptos$nom_depto_orig)
# model poisson regression using glm()
# restringido en origen
model <- glm(personas_mig ~
nom_depto_orig +
log_pob_destino_k +
log_edad_prom_des +
log_pbi_destino_millardos +
log_porc_ocupados_des +
log_dist_km -1 ,
family = poisson(link = "log"),
data = dd_deptos)
# resumen
summary(model)
plot(dd_deptos$personas_mig, fitted(model))
library(ggplot2)
library(ggpubr)
theme_set(
theme_minimal() +
theme(legend.position = "top")
)
# ggplot example
df1 <- ldply(dd_deptos$personas_mig, data.frame)
df2 <- ldply(fitted(model))
test = cbind(df1, df2)
colnames(test) = c('gt', 'id', 'predicted')
b <- ggplot(test, aes(x = gt, y = predicted))
# Scatter plot with regression line
b + geom_point()+
geom_smooth(method = "lm")
# Add a loess smoothed fit curve
b + geom_point()+
geom_smooth(method = "loess")
test2 = test[which(test$gt < 9000),]
b <- ggplot(test2, aes(x = gt, y = predicted))
b + geom_point()+geom_smooth(method = "lm")
# Add a loess smoothed fit curve
b + geom_point()+geom_smooth(method = "loess")
